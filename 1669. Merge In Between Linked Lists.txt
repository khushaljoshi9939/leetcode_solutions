/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        int count=0;
        ListNode *pa;
        ListNode *pb;
        ListNode* temp=list1;
        
        while(count<a-1)
        {
            count++;
            temp=temp->next;
        }
        pa=temp;
        temp=list1;
        count=0;
         while(count<b+1)
        {
            count++;
            temp=temp->next;
        }
        pb=temp;
        
        pa->next=list2;
        temp=list2;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=pb;
        
        
        return list1;
    }
};
